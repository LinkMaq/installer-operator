apiVersion: v1
kind: Namespace
metadata:
  name: kubegems-installer

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: installers.kubegems.io
spec:
  group: kubegems.io
  names:
    kind: Installer
    listKind: InstallerList
    plural: installers
    singular: installer
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Installer is the Schema for the installers API
          properties:
            apiVersion:
              description:
                "APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: string
            kind:
              description:
                "Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: string
            metadata:
              type: object
            spec:
              description: Spec defines the desired state of Installer
              type: object
              x-kubernetes-preserve-unknown-fields: true
            status:
              description: Status defines the observed state of Installer
              type: object
              x-kubernetes-preserve-unknown-fields: true
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubegems-installer
  namespace: kubegems-installer
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kubegems-installer-leader-election-role
  namespace: kubegems-installer
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubegems-installer-role
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
      - pods
      - pods/exec
      - pods/log
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - apps
    resources:
      - deployments
      - daemonsets
      - replicasets
      - statefulsets
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - plugins.kubegems.io
    resources:
      - installers
      - installers/status
      - installers/finalizers
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubegems-installer-metrics-reader
rules:
  - nonResourceURLs:
      - /metrics
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubegems-installer-proxy-role
rules:
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kubegems-installer-leader-election-rolebinding
  namespace: kubegems-installer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: gems-installer-leader-election-role
subjects:
  - kind: ServiceAccount
    name: kubegems-installer
    namespace: kubegems-installer
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubegems-installer-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: kubegems-installer
    namespace: kubegems-installer
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubegems-installer-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubegems-installer-proxy-role
subjects:
  - kind: ServiceAccount
    name: kubegems-installer
    namespace: kubegems-installer
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :6789
    metrics:
      bindAddress: 127.0.0.1:8080
    leaderElection:
      leaderElect: true
      resourceName: 811c9dc5.kubegems.io
kind: ConfigMap
metadata:
  name: kubegems-installer-manager-config
  namespace: kubegems-installer
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
    app.kubernetes.io/name: kubegems-installer-manager
  name: kubegems-installer-metrics
  namespace: kubegems-installer
spec:
  ports:
    - name: https
      port: 8443
      protocol: TCP
      targetPort: https
  selector:
    control-plane: controller-manager
    app.kubernetes.io/name: kubegems-installer-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: kubegems-installer-manager
    control-plane: controller-manager
  name: kubegems-installer-manager
  namespace: kubegems-installer
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubegems-installer-manager
      control-plane: controller-manager
  strategy:
    rollingUpdate:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubegems-installer-manager
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - secure-listen-address=0.0.0.0:8443
        - upstream=http://127.0.0.1:8081/
        - logtostderr=true
        - v=10
        image: kubegems/kube-rbac-proxy:v0.8.0
        imagePullPolicy: IfNotPresent
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
      - args:
        - health-probe-bind-address=:6789
        - metrics-bind-address=127.0.0.1:8081
        - leader-elect
        - leader-election-id=plugins
        env:
        - name: ANSIBLE_GATHERING
          value: explicit
        - name: ENABLED_KUBEGEMS_DOCS
          value: "off"
        - name: RUNNING_MODE 
          value: "server"
        image: kubegems/installer-operator:v2.3
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 6789
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 1
        name: manager
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readyz
            port: 6789
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /opt/ansible/roles/installer/files/kubegems/service/
          name: kubegems-config
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsNonRoot: true
      serviceAccount: kubegems-installer
      serviceAccountName: kubegems-installer
      volumes:
      - configMap:
          name:  kubegems-config-v2.3
        name:  kubegems-config

---
apiVersion: v1
data:
  config.yaml: |-
    # 系统相关
    system:
      # jwt过期时间（单位小时）
      jwtExpire: 24h

    # redis 配置
    redis:
      password: "gems-redis-password"
      addr: gems-redis:6379
      db: 0

    # gitea 配置
    git:
      host: http://gems-gitea:3000
      username: root
      password: Cloudminds1688

    # argo配置
    argo:
      addr: http://argocd-server.gemcloud-workflow-system
      username: admin
      password: Cloudminds1688

    # mysql 配置
    mysql:
      initdata: false
      addr: gems-mysql:3306
      username: root
      password: GhghVoeafevku
      db: gemcloud
      options:
        charset: utf8mb4_general_ci
        parseTime: "True"
        collation: utf8mb4_general_ci
        loc: Local

    # 应用商店 配置
    appstore:
      chartRepoUrl: http://gems-chartmuseum:8030
      chartsTmp: chartstmp

    # 审计开关
    audit:
      status: "on"

    # 集群安装配置
    installer:
      version: v2.1.2-release