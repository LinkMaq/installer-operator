#jinja2:lstrip_blocks: True
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: rollouts-controller
    app.kubernetes.io/name: argo-rollouts
    app.kubernetes.io/part-of: argo-rollouts
  name: argo-rollouts
  namespace: gemcloud-workflow-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: argo-rollouts
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: argo-rollouts
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: argo-rollouts
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - image: "{{ global.repository | default('docker.io/kubegems') }}/arge-rollouts:{{ core_plugins.argo_rollouts.details.version |default('latest')}}"
        imagePullPolicy: 
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /metrics
            port: 8090
          initialDelaySeconds: 30
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 10
        name: argo-rollouts
        ports:
        - containerPort: 8090
          name: metrics
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /metrics
            port: 8090
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 4
      securityContext:
        runAsNonRoot: true
      serviceAccountName: argo-rollouts
      {% if global.imagepullsecret is defined %}
      imagePullSecrets:
        - name: {{  global.imagepullsecret | default('kubegems') }}
      {% endif %}
