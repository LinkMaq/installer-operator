#jinja2:lstrip_blocks: True
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: grafana-operator
  name: grafana-operator
  namespace: gemcloud-monitoring-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana-operator
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana-operator
    spec:

      affinity:
        podAffinity:

        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: grafana-operator
                namespaces:
                  - "gemcloud-monitoring-system"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:

      serviceAccountName: grafana-operator
      securityContext:
        runAsUser: 1001
        fsGroup: 1001
        runAsNonRoot: true
        runAsGroup: 1001
      {% if global.imagepullsecret is defined %}
      imagePullSecrets:
        - name: {{ global.imagepullsecret | default('kubegems')}}
      {% endif %}
      containers:
        - name: grafana-operator
          image: "{{ global.repository| default('docker.io/kubegems')}}/grafana-operator:3.9.0-debian-10-r0"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
              name: metrics
          command:
            - grafana-operator
          args:
            - --grafana-image={{ global.repository| default('docker.io/kubegems')}}/grafana
            - --grafana-image-tag=3.9.0-debian-10-r0
            - --grafana-plugins-init-container-image={{ global.repository| default('docker.io/kubegems')}}/grafana
            - --grafana-plugins-init-container-tag=3.9.0-debian-10-r0
            - --scan-all
          securityContext:
            allowPrivilegeEscalation: false
          readinessProbe:
            httpGet:
              path: /metrics
              port: metrics
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /metrics
              port: metrics
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          env:
            - name: TEMPLATE_PATH
              value: /usr/local/bin/templates
            - name: WATCH_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: OPERATOR_NAME
              value: grafana-operator
